# Source: airflow/templates/deployments-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  labels:
    app: airflow
    component: web
spec:
  replicas: 1
  minReadySeconds: 120
  strategy:
    # Smooth rolling update of the Web UI
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: airflow
      component: web
  template:
    metadata:
      annotations: {}
      labels:
        app: airflow
        component: web
    spec:
      restartPolicy: Always
      serviceAccountName: airflow
#      securityContext:
#        runAsUser: 50000
      volumes:
        - name: dag-folder
          emptyDir: {}      
        - name: airflow-configmap
          configMap:
            name: airflow-configmap
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
      initContainers:
        - name: volume-mount-hack
          image: busybox
          command:
          - /bin/sh
          - -cx
          - |
            chown -R 50000:50000 /opt/airflow/logs
          volumeMounts:
          - name: airflow-logs
            mountPath: /opt/airflow/logs
      containers:
      - name: git-sync
        image: k8s.gcr.io/git-sync:v3.1.5
        volumeMounts:
        - name: dag-folder
          mountPath: /git
        envFrom:
          - configMapRef:
              name: "airflow-env"
        securityContext:
          runAsUser: 65533
        # - name: GIT_SYNC_DEST
        #   value: dags
      - name: web
        image: apache/airflow:1.10.11
        resources:
          requests:
            memory: "800Mi"
            cpu: .1
          limits:
            memory: "1500Mi"
            cpu: .3
        volumeMounts:
        - name: airflow-configmap
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg  
        - name: dag-folder
          mountPath: /user/airflow
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 50000
        command: ["/bin/sh","-c"]
        args: ["chmod -R 777 /opt/airflow/logs; airflow webserver; "]
        ports:
          - name: web
            containerPort: 8080
            protocol: TCP
          - name: logs
            containerPort: 8793
            protocol: TCP
        envFrom:
          - configMapRef:
              name: "airflow-env"
        env:          
          - name: POSTGRES_USER
            value: "postgres"  
      - name: scheduler
        image: apache/airflow:1.10.11
        resources:
          requests:
            memory: "200Mi"
            cpu: .1
          limits:
            memory: "500Mi"
            cpu: .3
        volumeMounts:
        - name: dag-folder
          mountPath: /user/airflow
        - name: airflow-configmap
          mountPath: /opt/airflow/airflow.cfg
          subPath: airflow.cfg
        - name: airflow-logs
          mountPath: /opt/airflow/logs
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 50000
        command: ["/bin/sh","-c"]
        args: ["id; ls -la /opt/airflow; chmod 777 -R /opt/airflow/; chmod 777 -R /opt/airflow/logs/scheduler; ls -la /opt/airflow;  airflow initdb && airflow scheduler -n -1 "]
        #   chmod -R 777 /opt/airflow/logs"]
        ports:
          - name: web
            containerPort: 8080
            protocol: TCP
          - name: logs
            containerPort: 8793
            protocol: TCP
        envFrom:
        - configMapRef:
            name: "airflow-env"
        env:          
          - name: POSTGRES_USER
            value: "postgres"
        # command:
        #   - "bash"
        #   - "-c"
        #   - >
        #     chmod 777 -R /opt/airflow/logs && 
        #     echo 'executing webserver...' &&
        #     airflow webserver
        # livenessProbe:
        #   httpGet:
        #     path: "/health"
        #     port: web
        #   ## Keep 6 minutes the delay to allow clean wait of postgres and redis containers
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 1
        #   successThreshold: 1
        #   failureThreshold: 5
        # readinessProbe:
        #   httpGet:
        #     path: "/health"
        #     port: web
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   timeoutSeconds: 1
        #   successThreshold: 1
        #   failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: airflow
    component: web
  name: airflow-web
spec:
#  type: LoadBalancer
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: web
  - port: 8793
    protocol: TCP
    targetPort: 8793
    name: logs
  selector:
    app: airflow
    component: web
